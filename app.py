import subprocess, socket, time, threading, sys, os

def is_roscore_running():
    try:
        s = socket.create_connection(("localhost", 11311), timeout=1)
        s.close()
        return True
    except socket.error:
        return False

def start_roscore_background():
    print("üöÄ ƒêang kh·ªüi ƒë·ªông roscore ng·∫ßm...")
    subprocess.Popen(
        ['roscore'],
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL,
        preexec_fn=os.setpgrp 
    )

def wait_for_roscore(timeout=15):
    print("‚è≥ ƒê·ª£i roscore s·∫µn s√†ng...")
    for i in range(timeout):
        if is_roscore_running():
            print("‚úÖ roscore ƒë√£ s·∫µn s√†ng.")
            return True
        time.sleep(1)
    print("‚ùå roscore kh√¥ng s·∫µn s√†ng sau th·ªùi gian ch·ªù.")
    return False

if __name__ == "__main__":
    if not is_roscore_running():
        start_roscore_background()
        if not wait_for_roscore():
            sys.exit("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn roscore.")
    from threading_launcher import app, run_ros_node, run_map_listener
    threading.Thread(target=run_ros_node, daemon=True).start()
    threading.Thread(target=run_map_listener, daemon=True).start()
    app.run(debug=True, host='127.0.0.1', port=8050)